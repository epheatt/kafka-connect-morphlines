# Specify server locations in a SOLR_LOCATOR variable; used later in
# variable substitutions:
SOLR_LOCATOR : {
  # Name of solr collection
  collection : ${collection}

  # ZooKeeper ensemble
  solrUrl : ${solrUrl}
}

morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : httpsolr

    # Import all morphline commands in these java packages and their
    # subpackages. Other commands that may be present on the classpath are
    # not visible to this morphline.
    importCommands : ["org.kitesdk.**", "org.apache.solr.**", "com.github.epheatt.**"]

    commands : [
      # log the record at INFO level to SLF4J
      { logInfo { format : "output record: {}", args : ["@{}"] } }
	  {	readJson : { } }
	  {	extractJsonPaths {
  	  		flatten : true
  	  		paths : {
  	  			firstName : /firstName
  	  			lastName : /lastName
  	  		}
  	  	}
  	  }
	  
	  {	
	  	setValues { 
	  		first_name : "@{firstName}"
	  		last_name : "@{lastName}"
  		}
	  }

      # Consume the output record of the previous command, convert
      # the timestamp, and pipe another record downstream.
      #
      # convert timestamp field to native Solr timestamp format
      # e.g. 2012-09-06T07:14:34Z to 2012-09-06T07:14:34.000Z
      {
        convertTimestamp {
          field : created_date
          inputFormats : ["yyyy-MM-dd'T'HH:mm:ss'Z'", "MMM d HH:mm:ss"]
          inputTimezone : America/Los_Angeles
          outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
          outputTimezone : UTC
        }
      }

      # log the record at INFO level to SLF4J
      { logInfo { format : "output record: {}", args : ["@{}"] } }

      # load the record into a Solr server or MapReduce Reducer
      #{
      #  loadSolr {
      #    solrLocator : ${SOLR_LOCATOR}
      #  }
      #}
    ]
  }
]